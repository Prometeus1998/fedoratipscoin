---
name: "ssl-deps"
suites:
- "xenial"
architectures:
- "amd64"
packages:
- "g++"
- "git-core"
- "zip"
- "faketime"
- "psmisc"
reference_datetime: "2018-01-02 00:00:00"
remotes: []
files:
- "openssl-1.0.2n.tar.gz"
- "qrencode-4.0.0.tar.bz2"
- "zlib-1.2.11.tar.gz"
- "libpng-1.6.34.tar.gz"
script: |
  # Defines
  export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1
  export FAKETIME=$REFERENCE_DATETIME
  export TZ=UTC
  INDIR=$HOME/build
  TEMPDIR=$HOME/tmp
  # Input Integrity Check
  echo "370babb75f278c39e0c50e8c4e7493bc0f18db6867478341a832a982fd15a8fe  openssl-1.0.2n.tar.gz"  | sha256sum -c
  echo "c90035e16921117d4086a7fdee65aab85be32beb4a376f6b664b8a425d327d0b  qrencode-4.0.0.tar.bz2" | sha256sum -c
  echo "c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1  zlib-1.2.11.tar.gz" | sha256sum -c
  echo "574623a4901a9969080ab4a2df9437026c8a87150dfd5c235e28c94b212964a7  libpng-1.6.34.tar.gz" | sha256sum -c

  for BITS in 64; do # for architectures
    #
    date
    INSTALLPREFIX=$HOME/staging${BITS}
    BUILDDIR=$HOME/build${BITS}
    HOST=x86_64-apple-darwin11
    #
    mkdir -p $INSTALLPREFIX $BUILDDIR
    cd $BUILDDIR
    #
    tar xzf $INDIR/openssl-1.0.2n.tar.gz
    cd openssl-1.0.2n
    # ./Configure no-shared no-dso --openssldir=$INSTALLPREFIX compiler:linux-x86_64
    ./config no-shared no-zlib no-dso no-krb5 --openssldir=$INSTALLPREFIX --target=$HOST -fPIC
    make
    make install_sw
    cd ..
    #
    # post-process all generated libraries to be deterministic
    # extract them to a temporary directory then re-build them deterministically
    for LIB in $(find $INSTALLPREFIX -name \*.a); do
        rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR
        x86_64-linux-gnu-ar xv $LIB | cut -b5- > /tmp/list.txt
        rm $LIB
        x86_64-linux-gnu-ar crsD $LIB $(cat /tmp/list.txt)
    done
    #
    cd $INSTALLPREFIX
    find include lib | sort | zip -X@ $OUTDIR/bitcoin-ssl-osx$BITS-gitian-r10.zip
  done # for BITS in
