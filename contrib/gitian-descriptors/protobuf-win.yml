---
name: "protobuf-win32"
suites:
- "xenial"
architectures:
- "amd64"
packages:
- "mingw-w64"
- "g++-mingw-w64"
- "zip"
- "faketime"
reference_datetime: "2013-04-15 00:00:00"
remotes: []
files:
- "protobuf-all-3.5.1.tar.gz"
script: |
  #
  export TZ=UTC
  INDIR=$HOME/build
  TEMPDIR=$HOME/tmp
  OPTFLAGS="-O2"
  # Integrity Check
  echo "72d43863f58567a9ea2054671fdb667867f9cf7865df623c7be630978ff97dff  protobuf-all-3.5.1.tar.gz" | sha256sum -c

  # 32
  for BITS in 64; do # for architectures
    #
    INSTALLPREFIX=$HOME/staging${BITS}
    BUILDDIR=$HOME/build${BITS}
    if [ "$BITS" == "32" ]; then
      HOST=i686-w64-mingw32
    else
      HOST=x86_64-w64-mingw32
    fi
    #
    mkdir -p $INSTALLPREFIX $BUILDDIR
    cd $BUILDDIR
    # adjusted tar for gz
    tar xzf $INDIR/protobuf-all-3.5.1.tar.gz
    cd protobuf-3.5.1
    # First: build a native (linux) protoc
    ./configure --enable-shared=no --disable-dependency-tracking --without-zlib CXXFLAGS="-frandom-seed=11 ${OPTFLAGS}"
    make
    mkdir -p $INSTALLPREFIX/host/bin
    cp src/protoc $INSTALLPREFIX/host/bin
    # Now recompile with the mingw cross-compiler:
    make distclean
    ./configure --prefix=$INSTALLPREFIX --enable-shared=no --disable-dependency-tracking --without-zlib --with-protoc=$INSTALLPREFIX/host/bin/protoc --host=$HOST CXXFLAGS="-frandom-seed=11 ${OPTFLAGS}"
    export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1
    export FAKETIME=$REFERENCE_DATETIME
    make
    make install
    # post-process all generated libraries to be deterministic
    # extract them to a temporary directory then re-build them deterministically
    for LIB in $(find $INSTALLPREFIX -name \*.a); do
        rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR
        $HOST-ar xv $LIB | cut -b5- > /tmp/list.txt
        rm $LIB
        $HOST-ar crsD $LIB $(cat /tmp/list.txt)
    done
    #
    cd $INSTALLPREFIX
    find include lib host | sort | zip -X@ $OUTDIR/protobuf-win$BITS-2.5.0-gitian-r4.zip
    unset LD_PRELOAD
    unset FAKETIME
  done # for BITS in
