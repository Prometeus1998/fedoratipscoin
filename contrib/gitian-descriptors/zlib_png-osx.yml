---
name: "bitcoin-zlib_png"
suites:
- "xenial"
architectures:
- "amd64"
packages:
- "g++"
- "git-core"
- "zip"
- "faketime"
- "psmisc"
- "ssh"
- "ssh-askpass"
- "ntp"
- "xauth"
- "xorg"
- "openbox"
reference_datetime: "2018-01-02 00:00:00"
remotes: []
files:
- "zlib-1.2.11.tar.gz"
- "libpng-1.6.34.tar.gz"
- "MacOSX10.13.sdk.tar.gz"
script: |
  #
  # LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1 FAKETIME=$REFERENCE_DATETIME
  # export FAKETIME=$REFERENCE_DATETIME
  
  export TZ=UTC
  date

  INDIR=$HOME/build
  TEMPDIR=$HOME/tmp
  # Input Integrity Check
  echo "c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1  zlib-1.2.11.tar.gz"     | sha256sum -c
  echo "574623a4901a9969080ab4a2df9437026c8a87150dfd5c235e28c94b212964a7  libpng-1.6.34.tar.gz"   | sha256sum -c
  echo "757f4fc13e02617c458d6cfac3f1fd50ac1c565b7abccc38f45510205c877e9b  MacOSX10.13.sdk.tar.gz" | sha256sum -c

  export VAGRANT_DETECTED_OS="$(uname)"
  # export SUDO_ASKPASS=/usr/bin/ssh-askpass

  # export DISPLAY=localhost:0

  # 32
  for BITS in 64; do # for architectures
    #
    INSTALLPREFIX=$HOME/staging${BITS}
    BUILDDIR=$HOME/build${BITS}
    HOST=x86_64-apple-darwin11
    #
    mkdir -p $INSTALLPREFIX $BUILDDIR
    cd $BUILDDIR
    #
    tar -xf MacOSX10.13.sdk.tar.gz
    #
    tar xzf $INDIR/zlib-1.2.11.tar.gz
    cd zlib-1.2.11
    CROSS_PREFIX=$HOST- ./configure --prefix=$INSTALLPREFIX --static
    make
    make install
    cd ..
    #
    tar xzf $INDIR/libpng-1.6.34.tar.gz
    cd libpng-1.6.34
    OPT="-O2"

    CPPFLAGS="${OPT} -I$INSTALLPREFIX/include" CFLAGS="${OPT} -I$INSTALLPREFIX/include" LDFLAGS="${OPT} -L$INSTALLPREFIX/lib" ./configure --disable-shared --enable-reduce-exports --disable-bench --disable-gui-tests --prefix=$INSTALLPREFIX --host=$HOST

    make $MAKEOPTS
    make install

    ls -al
    cd ..
 
    # post-process all generated libraries to be deterministic
    # extract them to a temporary directory then re-build them deterministically
    for LIB in $(find $INSTALLPREFIX -name \*.a); do
      rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR
      $HOST-ar xv $LIB | cut -b5- > /tmp/list.txt
      rm $LIB
      $HOST-ar crsD $LIB $(cat /tmp/list.txt)
    done
 
    cd $INSTALLPREFIX
    find include lib | sort | zip -X@ $OUTDIR/bitcoin-zib_png-osx$BITS-gitian-r10.zip
  done # for BITS in
